<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx"
				creationComplete="{init()}"
				autoDrawBackground="false"
				width="100%">

	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			
			import org.granite.tide.BaseContext;
			import org.granite.tide.Context;
			import org.granite.tide.Tide;
			import org.granite.tide.events.TideFaultEvent;
			import org.granite.tide.events.TideResultEvent;
			import org.xreport.entities.ListItemInt;
			import org.xreport.entities.Parameter;
			import org.xreport.entities.Source;
			import org.xreport.entities.UkmStore;
			import org.xreport.services.XReportService;
			
			import spark.events.IndexChangeEvent;
			
			[Bindable]
			private var param:Parameter;
			[Bindable]
			private var itemLst:ArrayCollection=new ArrayCollection();
			
			//[Inject]
			//public var xReportService:XReportService;

			//private var tideContext:BaseContext = Tide.getInstance().getContext() as BaseContext;

			protected function init():void{
				//tideContext.byType(MyComponent)
				var tideContext:BaseContext = Tide.getInstance().getContext();
				if(!tideContext) return;
				if(!param || !param.listSql) return;
				//var xReportService:XReportService=tideContext.xReportService;
				var xReportService:XReportService=tideContext.byType(XReportService) as XReportService;
				var source:Source=tideContext.source;
				if(xReportService && source) xReportService.getListInt(source.id,param.listSql, onList, onFault)
			}
			private function onList(event:TideResultEvent):void {
				itemLst = ArrayCollection(event.result);
				if(itemLst && itemLst.length>0){
					ddChoise.selectedIndex=0; 
					ddChoise_changeHandler(null);
				}
			}
			private function onFault(event:TideFaultEvent):void {
				//Alert.show(event.fault.faultString);
			}

			override public function set data(value:Object):void{
				super.data = value;
				if(value && value is Parameter){
					param=value as Parameter; 
				}else{
					param= null;
				}
			}

			protected function ddChoise_changeHandler(event:IndexChangeEvent):void{
				//if(param) param.valInt=ddChoise.selectedItem.store_id;
				var item:ListItemInt= ddChoise.selectedItem as ListItemInt; 
				if(param && item) param.valString=item.id.toString();
			}
			
		]]>
	</fx:Script>

	<s:HGroup gap="5" horizontalAlign="left" verticalAlign="middle" width="100%">
		<s:Label text="{param.name}"/>
		<s:Spacer width="5"/>
		<s:DropDownList id="ddChoise" dataProvider="{itemLst}" labelField="label" change="ddChoise_changeHandler(event)" width="250"/>
	</s:HGroup>
	
</s:ItemRenderer>
