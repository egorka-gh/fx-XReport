<element-set>

  <element name="LoadClass" before-report="1">
    <sql>
      <![CDATA[    
        begin supermag.RepTools.LoadClass(2, 0, :passort); end;
      ]]>
    </sql>
  </element>

  <element name="LoadLoc" before-report="1">
    <sql>
      <![CDATA[    
        begin supermag.RepTools.LoadLoc(1, '12,13,30,34,47,51,56,65,69,72,75', null, null); end;
      ]]>
    </sql>
  </element>

  <element name="LoadSQLFilter" before-report="1">
    <sql>
      <![CDATA[    
        begin supermag.RepTools.LoadSQLFilter; end;
      ]]>
    </sql>
  </element>

  <element name="RemainsCalc" before-report="1">
    <sql>
      <![CDATA[    
        begin supermag.Remains.Calc(TO_DATE ( :pTo , 'YYYY-MM-DD'),false, 23, 0, false); end;
      ]]>
    </sql>
  </element>

  <element name="clearTemp1" before-report="1">
    <sql>
      <![CDATA[    
        begin supermag.RepTools.TruncTable('ttfoundquantity'); supermag.RepTools.TruncTable('ttremainsprod'); end;
      ]]>
    </sql>
  </element>

  <element name="salesCalc" before-report="1">
    <sql>
      <![CDATA[    
INSERT INTO ttremainsprod (storeloc, zoneid, article, quantity, primecost)
     SELECT tl.id, 0, s.article, SUM (DECODE (d.doctype, 'CS', 1, -1) * s.quantity) qty, SUM (DECODE (d.doctype, 'CS', 1, -1) * s.totalprice) qty
       FROM ttloclist tl, supermag.smspec s, supermag.smdocuments d
      WHERE     d.doctype IN ('CS', 'CR')
            AND tl.id IN (d.locationfrom, d.locationto)
            AND d.createdat BETWEEN TO_DATE (:pfrom, 'YYYY-MM-DD') AND TO_DATE (:pto, 'YYYY-MM-DD')
            AND d.docstate IN (2, 3)
            AND s.doctype = d.doctype
            AND s.docid = d.id
            AND EXISTS
                   (SELECT 1
                      FROM ttidgroup tg
                     WHERE tg.article = s.article)
   GROUP BY tl.id, s.article
            ]]>
    </sql>
  </element>

  <element name="rpdays">
    <sql>
      <![CDATA[
	SELECT (TO_DATE ( :pTo , 'YYYY-MM-DD') - TO_DATE ( :pFrom , 'YYYY-MM-DD') + 1) days, TO_CHAR (TO_DATE ( :pFrom , 'YYYY-MM-DD'), 'DD.MM.YYYY') || ' по ' || TO_CHAR (TO_DATE ( :pTo , 'YYYY-MM-DD'), 'DD.MM.YYYY') speriod  FROM DUAL
 	]]>
    </sql>
  </element>

  <element name="rprow">
    <sql>
      <![CDATA[
   SELECT ca.id grpid, ca.tree || ' ' || ca.name grpname, c.article, c.shortname caption, c.mesabbrev ei, am_getarticlebarcodes (c.article) bars
    FROM svcardname c, ttidgroup tc, sacardassort ca, smcardassort am
   WHERE c.article = tc.article AND ca.tree LIKE :passort || '%' AND am.idassort = ca.id AND tc.article = am.article AND c.article = am.article 
ORDER BY ca.tree || ' ' || ca.name, c.shortname
 	]]>
    </sql>
  </element>

  <element name="rpcol">
    <sql>
      <![CDATA[
  SELECT s.id, s.name caption
    FROM smstorelocations s
   WHERE s.id IN (12,13,30,34,47,51,56,65,69,72,75)
ORDER BY s.id
	]]>
    </sql>
  </element>

  <element name="rpcoltot">
    <sql>
      <![CDATA[
SELECT NVL( (SELECT SUM (ts.quantity) FROM ttremainsprod ts WHERE ts.storeloc = :rpcol.id), 0) sel,
       NVL( (SELECT SUM (ts.primecost) FROM ttremainsprod ts WHERE ts.storeloc = :rpcol.id), 0) selsum,
       NVL( (SELECT SUM (tr.quantity) FROM ttremains tr WHERE tr.storeloc = :rpcol.id ), 0) ost
  FROM DUAL
  	]]>
    </sql>
  </element>

  <element name="rpcell">
    <sql>
      <![CDATA[
SELECT NVL ( (SELECT SUM (ts.quantity) FROM ttremainsprod ts WHERE ts.storeloc = :rpcol.id AND ts.article = :rprow.article), 0) sel,
       NVL ( (SELECT SUM (ts.primecost) FROM ttremainsprod ts WHERE ts.storeloc = :rpcol.id AND ts.article = :rprow.article), 0) selsum,
       NVL ( (SELECT SUM (tr.quantity) FROM ttremains tr WHERE tr.storeloc = :rpcol.id AND tr.article = :rprow.article), 0) ost
  FROM DUAL
    	]]>
    </sql>
  </element>

    <element name="rpcellst">
    <sql>
      <![CDATA[
SELECT NVL( (SELECT SUM (ts.quantity) FROM ttremainsprod ts, smcardassort am
               WHERE ts.storeloc = :rpcol.id AND am.idassort = :rprow.grpid AND ts.article = am.article), 0) sel,
       NVL( (SELECT SUM (ts.primecost) FROM ttremainsprod ts, smcardassort am
               WHERE ts.storeloc = :rpcol.id AND am.idassort = :rprow.grpid AND ts.article = am.article), 0) selsum,        
       NVL( (SELECT SUM (tr.quantity) FROM ttremains tr, smcardassort am
               WHERE tr.storeloc = :rpcol.id AND am.idassort = :rprow.grpid AND tr.article = am.article), 0) ost
  FROM DUAL
    ]]>
    </sql>
  </element>

</element-set>
